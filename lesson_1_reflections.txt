How did viewing a diff between two versions of a file help you see the bug that was introduced?

    Because it showed that the file name in the second version was not valid

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

    Easy access to the entire history of a program helps determine the behavior of the software how it has eveolved over the time or where the code broke, or where it worked entirely differently. You can at any time access an older version and see who made change to which version. Access all older versions

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

   When you manually commit you have more control over which version is saved.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    By allowing multple files to save under one commit we are allowing them to be treated as one task or batch process like either everything gets saved or nothing getting gets saved.

How can you use the commands git log and git diff to view the history of files?

    Fill in your answer here

How might using version control make you more confident to make changes that
could break something?

    we can always compare the file easily and get the older files if the new file broke something

Now that you have your workspace set up, what do you want to try using Git for?

    To learn anroid

 What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

 We can choose a logical point like a feature or tsak dompletion to save the changes. It will be esaier to compare with older version for differences. also version history need not be cluttered.

 Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

 Git can efficiently control versions of code files by treating interrelated files for a partaicular feature as a repositoru.google docs treats each file differently which is usually useful for text files

 How can you use the commands git log and git diff to view the history of files?

 git log shows al of the previous commits of a repository. Git diff we can see the changes between two different versions using git id

 How might using version control make you more confident to make changes that could break something?

 By using git checkout we can restore the version with the given id. Even if the new version breaks code we can always restore the previous version

 Now that you have your workspace set up, what do you want to try using Git for?

 To learn Android